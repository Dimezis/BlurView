apply plugin: 'com.android.library'
apply plugin: 'com.jfrog.bintray'
apply plugin: 'maven-publish'
apply plugin: 'de.mannodermaus.android-junit5'

ext {
    PUBLISH_GROUP_ID = 'com.eightbitlab'
    PUBLISH_ARTIFACT_ID = 'blurview'
}

def getVersionName() {
    def stdout = new ByteArrayOutputStream()
    exec {
        commandLine 'git', 'describe', '--tags'
        standardOutput = stdout
    }
    //remove "version-" prefix and hash
    def tagAndHash = stdout.toString().trim().replace("version-", "")
    def indexOfDash = tagAndHash.indexOf("-")
    if (indexOfDash == -1) {
        return tagAndHash
    }
    return tagAndHash.substring(0, indexOfDash)
}

android {
    compileSdkVersion 31

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }

    externalNativeBuild {
        cmake { path "src/main/cpp/CMakeLists.txt" }
    }

    defaultConfig {
        minSdkVersion 14
        targetSdkVersion 31

        ndk.abiFilters 'armeabi-v7a','arm64-v8a','x86','x86_64'
        externalNativeBuild {
            cmake { cppFlags "" }
        }
    }
}

configurations {
    javadocDeps
}

dependencies {
    implementation 'androidx.annotation:annotation:1.3.0'
    implementation("com.otaliastudios.opengl:egloo:0.6.1")

    javadocDeps 'androidx.annotation:annotation:1.3.0'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.8.2'
    testImplementation("org.junit.jupiter:junit-jupiter-params:5.8.2")
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.8.2'
}

task androidJavadocs(type: Javadoc) {
    failOnError = false
    source = android.sourceSets.main.java.srcDirs
    ext.androidJar = "${android.sdkDirectory}/platforms/${android.compileSdkVersion}/android.jar"
    classpath += files(ext.androidJar)
}

task androidJavadocsJar(type: Jar, dependsOn: androidJavadocs) {
    classifier = 'javadoc'
    from androidJavadocs.destinationDir
}

task androidSourcesJar(type: Jar) {
    classifier = 'sources'
    from android.sourceSets.main.java.srcDirs
}

publishing {
    publications {
        Production(MavenPublication) {
            artifact("$buildDir/outputs/aar/library-release.aar")
            artifact(androidSourcesJar)
            artifact(androidJavadocsJar)
            groupId PUBLISH_GROUP_ID
            artifactId PUBLISH_ARTIFACT_ID
            version getVersionName()

            //The publication doesn't know about our dependencies, so we have to manually add them to the pom
            pom.withXml {
                //Iterate over the implementation dependencies (we don't want the test ones), adding a <dependency> node for each
                def dependenciesNode = asNode().appendNode('dependencies')
                configurations.implementation.allDependencies.each {
                    if (it.name != 'unspecified') {
                        def dependencyNode = dependenciesNode.appendNode('dependency')
                        dependencyNode.appendNode('groupId', it.group)
                        dependencyNode.appendNode('artifactId', it.name)
                        dependencyNode.appendNode('version', it.version)
                    }
                }
            }
        }
    }
}

bintray {
    user = System.getenv('BINTRAY_USER')
    key = System.getenv('BINTRAY_API_KEY')
    dryRun = false
    override = false
    publish = true
    pkg {
        repo = 'maven'
        name = 'BlurView'
        userOrg = 'dimezis'
        vcsUrl = 'https://github.com/Dimezis/BlurView'
        licenses = ['Apache-2.0']

        version {
            name = getVersionName()
            vcsTag = getVersionName()
        }
    }
    publications = ['Production']
}